{
  "service": {
    "service": "hangman",
    "serviceObject": {
      "name": "hangman"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "stage": "dev",
      "environment": {
        "USRV_STAGE": "dev"
      },
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ConnectSessionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/hangman-dev-connectSession"
            }
          },
          "ConnectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/hangman-dev-connect"
            }
          },
          "NotifyAllLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/hangman-dev-notifyAll"
            }
          },
          "NotifyHostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/hangman-dev-notifyHost"
            }
          },
          "NotifyPlayersLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/hangman-dev-notifyPlayers"
            }
          },
          "DisconnectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/hangman-dev-disconnect"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "hangman",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hangman-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hangman-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "hangman",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ConnectSessionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/hangman/dev/1628376482363-2021-08-07T22:48:02.363Z/connectSession.zip"
              },
              "Handler": "src/handler/ConnectSessionHandler.main",
              "Runtime": "nodejs12.x",
              "FunctionName": "hangman-dev-connectSession",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USRV_STAGE": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ConnectSessionLogGroup"
            ]
          },
          "ConnectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/hangman/dev/1628376482363-2021-08-07T22:48:02.363Z/connect.zip"
              },
              "Handler": "src/handler/ConnectHandler.main",
              "Runtime": "nodejs12.x",
              "FunctionName": "hangman-dev-connect",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USRV_STAGE": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ConnectLogGroup"
            ]
          },
          "NotifyAllLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/hangman/dev/1628376482363-2021-08-07T22:48:02.363Z/notifyAll.zip"
              },
              "Handler": "src/handler/NotifyAllHandler.main",
              "Runtime": "nodejs12.x",
              "FunctionName": "hangman-dev-notifyAll",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USRV_STAGE": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "NotifyAllLogGroup"
            ]
          },
          "NotifyHostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/hangman/dev/1628376482363-2021-08-07T22:48:02.363Z/notifyHost.zip"
              },
              "Handler": "src/handler/NotifyHostHandler.main",
              "Runtime": "nodejs12.x",
              "FunctionName": "hangman-dev-notifyHost",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USRV_STAGE": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "NotifyHostLogGroup"
            ]
          },
          "NotifyPlayersLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/hangman/dev/1628376482363-2021-08-07T22:48:02.363Z/notifyPlayers.zip"
              },
              "Handler": "src/handler/NotifyPlayersHandler.main",
              "Runtime": "nodejs12.x",
              "FunctionName": "hangman-dev-notifyPlayers",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USRV_STAGE": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "NotifyPlayersLogGroup"
            ]
          },
          "DisconnectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/hangman/dev/1628376482363-2021-08-07T22:48:02.363Z/disconnect.zip"
              },
              "Handler": "src/handler/DisconnectHandler.main",
              "Runtime": "nodejs12.x",
              "FunctionName": "hangman-dev-disconnect",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USRV_STAGE": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DisconnectLogGroup"
            ]
          },
          "ConnectSessionLambdaVersioniaEWPsFbZ0nLPxuvEwL9YNfb46hbwH4uEJgaQ4lHM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ConnectSessionLambdaFunction"
              },
              "CodeSha256": "ezqnhkFLtN0OaI8G0io4fHVRySw0c1ZKDdHn/WUhQc0="
            }
          },
          "NotifyPlayersLambdaVersionmQKpCUVz8a1kxX1ukn2gzTApdEI62sheebAjIgKK8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "NotifyPlayersLambdaFunction"
              },
              "CodeSha256": "PthT0wjqn00aNZguntnptBXE9KZk62ITTFw522OIMjE="
            }
          },
          "ConnectLambdaVersionbnwzPUuhZ71phAIhwD7DpQ1RFQ0sHS858F8tMTT4QAs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ConnectLambdaFunction"
              },
              "CodeSha256": "1eNl+4894YVaAkU88/BhPZUPy2h6VGabHoS5Ni+m6MM="
            }
          },
          "NotifyAllLambdaVersionTtlIAy3QDNwZBeN5JilFk8sQymHedScCwOOvUBcSHI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "NotifyAllLambdaFunction"
              },
              "CodeSha256": "+n4cSvDSCLCHysn8Me09eNMxEh38qTKor6mE+G+l9Vw="
            }
          },
          "DisconnectLambdaVersionFwu6NmGHueAURrqQ9aqsY26lucczXP8oOwHiFSiV2Q": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DisconnectLambdaFunction"
              },
              "CodeSha256": "dUZgita0GNtdJ3+gwTe6x+vKtdG6fo4Cegv4UQIkruA="
            }
          },
          "NotifyHostLambdaVersionJu8IFAYtXYRWU4u5V2dBn3vK1mOng1IJYTSwnA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "NotifyHostLambdaFunction"
              },
              "CodeSha256": "BdR/68lza9TQALwi5cMEFDf6amDnFXcGHgelbKCQr0A="
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-hangman-dev-ServerlessDeploymentBucketName"
            }
          },
          "ConnectSessionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ConnectSessionLambdaVersioniaEWPsFbZ0nLPxuvEwL9YNfb46hbwH4uEJgaQ4lHM"
            },
            "Export": {
              "Name": "sls-hangman-dev-ConnectSessionLambdaFunctionQualifiedArn"
            }
          },
          "NotifyPlayersLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "NotifyPlayersLambdaVersionmQKpCUVz8a1kxX1ukn2gzTApdEI62sheebAjIgKK8"
            },
            "Export": {
              "Name": "sls-hangman-dev-NotifyPlayersLambdaFunctionQualifiedArn"
            }
          },
          "ConnectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ConnectLambdaVersionbnwzPUuhZ71phAIhwD7DpQ1RFQ0sHS858F8tMTT4QAs"
            },
            "Export": {
              "Name": "sls-hangman-dev-ConnectLambdaFunctionQualifiedArn"
            }
          },
          "NotifyAllLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "NotifyAllLambdaVersionTtlIAy3QDNwZBeN5JilFk8sQymHedScCwOOvUBcSHI"
            },
            "Export": {
              "Name": "sls-hangman-dev-NotifyAllLambdaFunctionQualifiedArn"
            }
          },
          "DisconnectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DisconnectLambdaVersionFwu6NmGHueAURrqQ9aqsY26lucczXP8oOwHiFSiV2Q"
            },
            "Export": {
              "Name": "sls-hangman-dev-DisconnectLambdaFunctionQualifiedArn"
            }
          },
          "NotifyHostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "NotifyHostLambdaVersionJu8IFAYtXYRWU4u5V2dBn3vK1mOng1IJYTSwnA"
            },
            "Export": {
              "Name": "sls-hangman-dev-NotifyHostLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "service": {
        "name": "hangman"
      },
      "webpack": {
        "packager": "npm",
        "includeModules": {
          "forceInclude": [
            "jsonpath"
          ],
          "forceExclude": [
            "aws-sdk"
          ]
        }
      }
    },
    "plugins": [
      "serverless-webpack"
    ],
    "pluginsData": {},
    "functions": {
      "connectSession": {
        "handler": "src/handler/ConnectSessionHandler.main",
        "events": [],
        "name": "hangman-dev-connectSession",
        "package": {
          "artifact": ".serverless\\connectSession.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ConnectSessionLambdaVersioniaEWPsFbZ0nLPxuvEwL9YNfb46hbwH4uEJgaQ4lHM"
      },
      "connect": {
        "handler": "src/handler/ConnectHandler.main",
        "events": [],
        "name": "hangman-dev-connect",
        "package": {
          "artifact": ".serverless\\connect.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ConnectLambdaVersionbnwzPUuhZ71phAIhwD7DpQ1RFQ0sHS858F8tMTT4QAs"
      },
      "notifyAll": {
        "handler": "src/handler/NotifyAllHandler.main",
        "events": [],
        "name": "hangman-dev-notifyAll",
        "package": {
          "artifact": ".serverless\\notifyAll.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "NotifyAllLambdaVersionTtlIAy3QDNwZBeN5JilFk8sQymHedScCwOOvUBcSHI"
      },
      "notifyHost": {
        "handler": "src/handler/NotifyHostHandler.main",
        "events": [],
        "name": "hangman-dev-notifyHost",
        "package": {
          "artifact": ".serverless\\notifyHost.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "NotifyHostLambdaVersionJu8IFAYtXYRWU4u5V2dBn3vK1mOng1IJYTSwnA"
      },
      "notifyPlayers": {
        "handler": "src/handler/NotifyPlayersHandler.main",
        "events": [],
        "name": "hangman-dev-notifyPlayers",
        "package": {
          "artifact": ".serverless\\notifyPlayers.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "NotifyPlayersLambdaVersionmQKpCUVz8a1kxX1ukn2gzTApdEI62sheebAjIgKK8"
      },
      "disconnect": {
        "handler": "src/handler/DisconnectHandler.main",
        "events": [],
        "name": "hangman-dev-disconnect",
        "package": {
          "artifact": ".serverless\\disconnect.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "DisconnectLambdaVersionFwu6NmGHueAURrqQ9aqsY26lucczXP8oOwHiFSiV2Q"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "individually": true,
        "excludeDevDependencies": true,
        "exclude": [
          "src/handler/*.LICENSE"
        ],
        "artifactDirectoryName": "serverless/hangman/dev/1628376482363-2021-08-07T22:48:02.363Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/hangman/dev/1628376482363-2021-08-07T22:48:02.363Z",
    "artifact": ""
  }
}